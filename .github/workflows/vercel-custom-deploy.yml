name: Deploy to Vercel [Custom]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  GH_TOKEN: ${{ github.token }}

on:
  push:
    branches:
      - "*"
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    # Skipping for vercel admin username since vercel will auto-deploy for admin
    if: github.actor != 'vercel-opynco'
    steps:
      - uses: actions/checkout@v4
      - name: Determine Deployment Environment
        id: prod_or_not
        # use --prod flag for main branch
        run: |
          if [ "${{ github.ref }}" == 'refs/heads/main' ]
          then
              echo "vercel-args=--prod" >> $GITHUB_OUTPUT
          else
              echo "vercel-args=" >> $GITHUB_OUTPUT
          fi
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Deploy to Vercel
        id: deploy_cli
      # deploy using vercel CLI with custom flags to ensure proper author, branch and commit tagging is done on vercel dashboard
        run: | 
          DEPLOY_URL=$(vercel ${{steps.prod_or_not.outputs.vercel-args}} -t ${{ secrets.VERCEL_TOKEN }} \
            -m githubCommitSha=${{ github.sha }} \
            -m githubCommitAuthorName=${{ github.actor }} \
            -m githubCommitAuthorLogin=${{ github.actor }} \
            -m githubDeployment=1 \
            -m githubOrg=opynfinance \
            -m githubCommitOrg=opynfinance \
            -m githubCommitMessage="${{ github.event.head_commit.message }}" \
            -m githubCommitRef=${{ github.ref_name }} \
            --scope ${{ secrets.VERCEL_ORG_ID }} --force --yes)
          gh pr comment ${{ github.event.pull_request.number }} --body "Deployed to: $DEPLOY_URL" || echo "Could not comment"