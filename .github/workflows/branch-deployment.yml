name: Branch Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  GH_TOKEN: ${{ github.token }}
  
on:
  push:
    branches:
      - "*"
  
jobs:
  supabase_branch_preview:
    name: Supabase Database Branching Preview
    runs-on: ubuntu-latest
    steps:
      - name: Supabase Branch
        uses: 0xBigBoss/supabase-branch-gh-action@v1
        with:
          supabase-access-token: ${{ secrets.SUPABASE_TOKEN }}
          supabase-project-id: ${{ secrets.SUPABASE_PROJECT_ID }}
          wait-for-migrations: true # Optional. Default is false.
          timeout: 60 # Optional. Default is 60.

  get_result:
    name: Get result
    runs-on: ubuntu-latest
    needs: supabase_branch_preview
    steps:
      - name: Output Supabase Branch Details
        run: |
          echo "ref=${{ needs.supabase_branch_preview.outputs.ref }}"
          echo "api_url=${{ needs.supabase_branch_preview.outputs.api_url }}"
          echo "graphql_url=${{ needs.supabase_branch_preview.outputs.graphql_url }}"
          echo "db_host=${{ needs.supabase_branch_preview.outputs.db_host }}"
          echo "db_port=${{ needs.supabase_branch_preview.outputs.db_port }}"
          echo "db_user=${{ needs.supabase_branch_preview.outputs.db_user }}"
          echo "db_password=${{ needs.supabase_branch_preview.outputs.db_password }}"
          echo "jwt_secret=${{ needs.supabase_branch_preview.outputs.jwt_secret }}"
          echo "anon_key=${{ needs.supabase_branch_preview.outputs.anon_key }}"
          echo "service_role_key=${{ needs.supabase_branch_preview.outputs.service_role_key }}"

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: get_result
    if: github.actor != 'vercel-opynco'
    steps:
      - uses: actions/checkout@v4
      - name: Determine Deployment Environment
        id: prod_or_not
        run: |
          if [ "${{ github.ref }}" == 'refs/heads/main' ]
          then
              echo "vercel-args=--prod" >> $GITHUB_OUTPUT
          else
              echo "vercel-args=" >> $GITHUB_OUTPUT
          fi
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Deploy to Vercel
        id: deploy_cli
        run: |
          DEPLOY_URL=$(vercel ${{ steps.prod_or_not.outputs.vercel-args }} -t ${{ secrets.VERCEL_TOKEN }} \
            -m githubCommitSha=${{ github.sha }} \
            -m githubCommitAuthorName=${{ github.actor }} \
            -m githubCommitAuthorLogin=${{ github.actor }} \
            -m githubDeployment=1 \
            -m githubOrg=opynfinance \
            -m githubCommitOrg=opynfinance \
            -m githubCommitMessage="${{ github.event.head_commit.message }}" \
            -m githubCommitRef=${{ github.ref_name }} \
            --scope ${{ secrets.VERCEL_ORG_ID }} --force --yes)
          gh pr comment ${{ github.event.pull_request.number }} --body "Deployed to: $DEPLOY_URL" || echo "Could not comment"